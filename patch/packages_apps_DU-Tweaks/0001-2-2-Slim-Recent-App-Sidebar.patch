From f42895e94baf3222fefbb3b80f9e3eb43f35f39e Mon Sep 17 00:00:00 2001
From: sub77 <sub77@ymail.com>
Date: Mon, 8 Aug 2016 21:56:17 +0200
Subject: [PATCH 1/2] [2/2] Slim Recent App Sidebar

One thing I was missing with SlimRecents was the possibility to launch your favorite apps from the recents screen. As SlimRecents covers only the half of the screen (more or less), there is enough space on the other edge to display an app sidebar, which I based on the ChameleonOS one.

Changes to the ChameleonOS sidebar include:
- No trigger areas, but show/hide with the SlimRecent screen
- Adapted look and animation to SlimRecent
- Longpress actions
- Slimer settings using ActionListViewSettings, also added possibility to configure sidebar size (roughly, as the size is adapted to the screen height in order to show full icons) and colors
- Currently no option to add folders to the sidebar, as this does not work with the current ActionListViewSettings without further work

Change-Id: I3acc2327dce3aae01d5ae722204639b213c5f750
---
 res/values/strings.xml                             |  28 +++
 res/xml/recent_app_sidebar_fragment.xml            |  25 +++
 res/xml/recent_app_sidebar_settings.xml            |  48 ++++++
 res/xml/recent_panel_settings.xml                  | 162 +++++++++++++++++
 res/xml/recents.xml                                |  12 ++
 .../dutweaks/dslv/ActionListViewSettings.java      |   8 +
 .../dutweaks/fragments/RecentAppSidebar.java       | 191 +++++++++++++++++++++
 .../fragments/RecentAppSidebarFragment.java        |  56 ++++++
 8 files changed, 530 insertions(+)
 create mode 100644 res/xml/recent_app_sidebar_fragment.xml
 create mode 100644 res/xml/recent_app_sidebar_settings.xml
 create mode 100644 res/xml/recent_panel_settings.xml
 create mode 100644 src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebar.java
 create mode 100644 src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebarFragment.java

diff --git a/res/values/strings.xml b/res/values/strings.xml
index 596a1d8..501a717 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -1027,5 +1027,33 @@
 
     <!-- Navbar buttons transparency -->
     <string name="navbar_buttons_alpha_title">Buttons transparency</string>
+    
+    <!-- Slim Recents -->
+    <string name="slim_recents_panel">Slim Recents</string>
+    <string name="use_slim_recents_title">Slim recents</string>
+    <string name="show_running_tasks_title">Only show running apps</string>
+    <string name="recents_max_apps_title">Max allowed apps</string>
+    <string name="recent_panel_scale_title">Size</string>
+    <string name="recent_panel_expanded_mode_title">Expanded mode</string>
+    <string name="recent_panel_expanded_mode_summary">Recent tasks expanded preview mode</string>
+    <string name="recent_panel_expanded_mode_auto">Auto (default)</string>
+    <string name="recent_panel_expanded_mode_always">Always</string>
+    <string name="recent_panel_expanded_mode_never">Never</string>
+    <string name="recent_panel_show_topmost_title">Show topmost task</string>
+    <string name="recent_panel_show_topmost_summary">Don\'t exclude the topmost task in recents view</string>
+    <string name="recent_panel_bg_color_title">Panel background color</string>
+    <string name="recent_card_bg_color_title">Card background color</string>
+    <string name="recent_card_text_color_title">Card text color</string>
+    <!-- ATTENTION: RTL languages need to replace left with right -->
+    <string name="recent_panel_lefty_mode_title">Show on the left edge</string>
+    <string name="recent_panel_lefty_mode_summary">Show recent apps panel on the left edge</string>
+    <string name="recent_app_sidebar_title">App sidebar</string>
+    <string name="recent_app_sidebar_summary">Show app shortcuts on the other edge</string>
+    <string name="recent_app_sidebar_style_title">Sidebar style</string>
+    <string name="recent_app_sidebar_style_summary">Change recent app sidebar style</string>
+    <string name="recent_app_sidebar_hide_labels_title">Hide icon labels</string>
+    <string name="recent_app_sidebar_label_color_title">Label color</string>
+    <string name="recent_app_sidebar_bg_color_title">Background color</string>
+    <string name="recent_app_sidebar_scale_title">Size</string>
 
 </resources>
diff --git a/res/xml/recent_app_sidebar_fragment.xml b/res/xml/recent_app_sidebar_fragment.xml
new file mode 100644
index 0000000..162f8d6
--- /dev/null
+++ b/res/xml/recent_app_sidebar_fragment.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2015 Slimroms Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <PreferenceScreen
+        android:fragment="com.android.settings.slim.RecentAppSidebar"
+        android:key="recent_app_sidebar"
+        android:title="@string/recent_app_sidebar_style_title"
+        android:summary="@string/recent_app_sidebar_style_summary" />
+
+</PreferenceScreen>
diff --git a/res/xml/recent_app_sidebar_settings.xml b/res/xml/recent_app_sidebar_settings.xml
new file mode 100644
index 0000000..5a8d20b
--- /dev/null
+++ b/res/xml/recent_app_sidebar_settings.xml
@@ -0,0 +1,48 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2015 The SlimRoms Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
+                  xmlns:settings="http://schemas.android.com/apk/res/com.android.settings"
+                  android:title="@string/recent_panel_category">
+
+    <SlimSeekBarPreference
+            android:key="recent_app_sidebar_scale"
+            android:title="@string/recent_app_sidebar_scale_title"
+            android:persistent="false" />
+
+    <SwitchPreference
+            android:key="recent_app_sidebar_disable_labels"
+            android:title="@string/recent_app_sidebar_hide_labels_title"
+            android:disableDependentsState="true"
+            android:defaultValue="false"
+            android:persistent="false" />
+
+    <net.margaritov.preference.colorpicker.ColorPickerPreference
+            android:key="recent_app_sidebar_label_color"
+            android:title="@string/recent_app_sidebar_label_color_title"
+            android:defaultValue="0x00ffffff"
+            alphaSlider="false"
+            android:persistent="false"
+            android:dependency="recent_app_sidebar_disable_labels" />
+
+    <net.margaritov.preference.colorpicker.ColorPickerPreference
+            android:key="recent_app_sidebar_bg_color"
+            android:title="@string/recent_app_sidebar_bg_color_title"
+            android:defaultValue="0x00ffffff"
+            alphaSlider="true"
+            android:persistent="false" />
+
+</PreferenceScreen>
diff --git a/res/xml/recent_panel_settings.xml b/res/xml/recent_panel_settings.xml
new file mode 100644
index 0000000..6edb84a
--- /dev/null
+++ b/res/xml/recent_panel_settings.xml
@@ -0,0 +1,162 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2015 The SlimRoms Project
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<PreferenceScreen
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:title="@string/recents_settings_title">
+
+    <PreferenceCategory
+        android:key="aosp_recents_panel"
+        android:title="@string/recents_panel_category" >
+
+        <com.android.settings.preference.SystemSettingSwitchPreference
+            android:key="recents_search_bar"
+            android:title="@string/recents_searchbar_title"
+            android:summary="@string/recents_searchbar_summary"
+            android:defaultValue="true" />
+
+        <com.android.settings.preference.SystemSettingSwitchPreference
+            android:key="systemui_recents_mem_display"
+            android:title="@string/recents_show_membar_title"
+            android:summary="@string/recents_show_membar_summary"
+            android:defaultValue="false" />
+
+        <com.android.settings.preference.SystemSettingSwitchPreference
+            android:key="recents_full_screen"
+            android:title="@string/recents_full_screen_title"
+            android:summary="@string/recents_full_screen_summary"
+            android:defaultValue="false" />
+
+        <SwitchPreference
+            android:key="show_clear_all_recents"
+            android:title="@string/show_clear_all_recents_button_title"
+            android:summary="@string/show_clear_all_recents_button_summary"
+            android:defaultValue="true" />
+
+        <com.android.settings.preference.SystemSettingSwitchPreference
+            android:key="recents_clear_all_dismiss_all"
+            android:title="@string/recents_clear_all_dismiss_all_title"
+            android:summary="@string/recents_clear_all_dismiss_all_summary"
+            android:defaultValue="true"
+            android:dependency="show_clear_all_recents" />
+
+        <ListPreference
+            android:key="recents_clear_all_location"
+            android:title="@string/recents_clear_all_location_title"
+            android:entries="@array/recents_clear_all_location_entries"
+            android:entryValues="@array/recents_clear_all_location_values"
+            android:defaultValue="3"
+            android:dependency="show_clear_all_recents" />
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="slim_recents_panel"
+        android:title="@string/slim_recents_panel" >
+
+        <SwitchPreference
+            android:key="use_slim_recents"
+            android:title="@string/use_slim_recents_title"
+            android:defaultValue="false" />
+
+        <SwitchPreference
+            android:key="only_show_running_tasks"
+            android:title="@string/show_running_tasks_title"
+            android:dependency="use_slim_recents"
+            android:defaultValue="false" />
+
+        <SlimSeekBarPreference
+            android:key="max_apps"
+            android:title="@string/recents_max_apps_title" 
+            android:dependency="use_slim_recents" />
+
+       <PreferenceScreen
+               android:dependency="use_slim_recents"
+               android:key="recent_app_sidebar_content"
+               android:fragment="com.android.settings.slim.dslv.ActionListViewSettings"
+               android:title="@string/recent_app_sidebar_title"
+               android:summary="@string/recent_app_sidebar_summary">
+           <extra android:name="actionMode" android:value="7" />
+           <extra android:name="maxAllowedActions" android:value="-1" />
+           <extra android:name="useAppPickerOnly" android:value="true" />
+           <extra android:name="fragment" android:value="com.android.settings.slim.fragments.RecentAppSidebarFragment" />
+       </PreferenceScreen>
+
+        <ListPreference
+            android:dependency="use_slim_recents"
+            android:key="recent_panel_expanded_mode"
+            android:entries="@array/recent_panel_expanded_mode_entries"
+            android:entryValues="@array/recent_panel_expanded_mode_values"
+            android:title="@string/recent_panel_expanded_mode_title"
+            android:summary="@string/recent_panel_expanded_mode_summary"
+            android:persistent="false" />
+
+        <SwitchPreference
+            android:dependency="use_slim_recents"
+            android:key="recent_panel_lefty_mode"
+            android:title="@string/recent_panel_lefty_mode_title"
+            android:summary="@string/recent_panel_lefty_mode_summary"
+            android:persistent="false" />
+
+        <SwitchPreference
+            android:dependency="use_slim_recents"
+            android:key="recent_panel_show_topmost"
+            android:title="@string/recent_panel_show_topmost_title"
+            android:summary="@string/recent_panel_show_topmost_summary"
+            android:persistent="false" />
+
+        <SlimSeekBarPreference
+            android:key="recent_panel_scale"
+            android:title="@string/recent_panel_scale_title" 
+            android:dependency="use_slim_recents" />
+
+        <net.margaritov.preference.colorpicker.ColorPickerPreference
+            android:dependency="use_slim_recents"
+            android:key="recent_panel_bg_color"
+            android:title="@string/recent_panel_bg_color_title"
+            android:defaultValue="0x00ffffff"
+            alphaSlider="true" />
+
+        <net.margaritov.preference.colorpicker.ColorPickerPreference
+            android:dependency="use_slim_recents"
+            android:key="recent_card_bg_color"
+            android:title="@string/recent_card_bg_color_title"
+            android:defaultValue="0x00ffffff"
+            alphaSlider="true" />
+
+        <net.margaritov.preference.colorpicker.ColorPickerPreference
+            android:dependency="use_slim_recents"
+            android:key="recent_card_text_color"
+            android:title="@string/recent_card_text_color_title"
+            android:defaultValue="0x00ffffff"
+            alphaSlider="true" />
+
+    </PreferenceCategory>
+
+    <PreferenceCategory
+        android:key="other_recents_panel"
+        android:title="@string/other_recents_category" >
+
+        <!-- OmniSwitch -->
+        <PreferenceScreen
+            android:key="omniswitch"
+            android:id="@+id/omniswitch"
+            android:title="@string/omniswitch_settings_title"
+            android:fragment="com.android.settings.benzo.OmniSwitch" />
+	
+    </PreferenceCategory>
+
+</PreferenceScreen>
diff --git a/res/xml/recents.xml b/res/xml/recents.xml
index c88112f..70b7f42 100644
--- a/res/xml/recents.xml
+++ b/res/xml/recents.xml
@@ -86,6 +86,18 @@
             android:summary="@string/slim_recents_enable_summary"
             android:defaultValue="false" />
 
+  <PreferenceScreen
+               android:dependency="use_slim_recents"
+               android:key="recent_app_sidebar_content"
+               android:fragment="com.android.settings.slim.dslv.ActionListViewSettings"
+               android:title="@string/recent_app_sidebar_title"
+               android:summary="@string/recent_app_sidebar_summary">
+           <extra android:name="actionMode" android:value="7" />
+           <extra android:name="maxAllowedActions" android:value="-1" />
+           <extra android:name="useAppPickerOnly" android:value="true" />
+           <extra android:name="fragment" android:value="com.android.settings.slim.fragments.RecentAppSidebarFragment" />
+       </PreferenceScreen>
+
         <SlimSeekBarPreference
             android:key="max_apps"
             android:title="@string/recents_max_apps_title"
diff --git a/src/com/dirtyunicorns/dutweaks/dslv/ActionListViewSettings.java b/src/com/dirtyunicorns/dutweaks/dslv/ActionListViewSettings.java
index b0d90e6..a6bc7b6 100644
--- a/src/com/dirtyunicorns/dutweaks/dslv/ActionListViewSettings.java
+++ b/src/com/dirtyunicorns/dutweaks/dslv/ActionListViewSettings.java
@@ -92,6 +92,7 @@ public class ActionListViewSettings extends ListFragment implements
     private static final int LOCKSCREEN_SHORTCUT   = 4;
     private static final int POWER_MENU_SHORTCUT   = 5;
     private static final int SHAKE_EVENTS_DISABLED = 6;
+    private static final int RECENT_APP_SIDEBAR    = 7;
 
     private static final int DEFAULT_MAX_ACTION_NUMBER = 5;
 
@@ -520,6 +521,9 @@ public class ActionListViewSettings extends ListFragment implements
             case SHAKE_EVENTS_DISABLED:
                 return ActionHelper.getDisabledShakeApps(mActivity);
 */
+            case RECENT_APP_SIDEBAR:
+                return ActionHelper.getRecentAppSidebarConfigWithDescription(
+                        mActivity, mActionValuesKey, mActionEntriesKey);
         }
         return null;
     }
@@ -549,6 +553,9 @@ public class ActionListViewSettings extends ListFragment implements
                 ActionHelper.setDisabledShakeApps(mActivity, actionConfigs, reset);
                 break;
 */
+            case RECENT_APP_SIDEBAR:
+                ActionHelper.setRecentAppSidebarConfig(mActivity, actionConfigs, reset);
+                break;
         }
     }
 
@@ -714,6 +721,7 @@ public class ActionListViewSettings extends ListFragment implements
                         case NAV_RING:
                         case PIE:
                         case PIE_SECOND:
+                        case RECENT_APP_SIDEBAR:
                         default:
                             actionMode = res.getString(R.string.shortcut_action_help_button);
                             break;
diff --git a/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebar.java b/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebar.java
new file mode 100644
index 0000000..6d45d89
--- /dev/null
+++ b/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebar.java
@@ -0,0 +1,191 @@
+/*
+ * Copyright (C) 2015 SlimRoms Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.slim;
+
+import android.app.AlertDialog;
+import android.content.DialogInterface;
+import android.os.Bundle;
+import android.preference.Preference;
+import android.preference.SlimSeekBarPreference;
+import android.preference.SwitchPreference;
+import android.provider.Settings;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import com.android.settings.DialogCreatable;
+import com.android.settings.R;
+import com.android.settings.SettingsPreferenceFragment;
+import net.margaritov.preference.colorpicker.ColorPickerPreference;
+import com.android.internal.logging.MetricsLogger;
+
+public class RecentAppSidebar extends SettingsPreferenceFragment implements DialogCreatable,
+        Preference.OnPreferenceChangeListener {
+
+    private static final String TAG = "RecentAppSidebarSettings";
+
+    // Preferences
+    private static final String APP_SIDEBAR_HIDE_LABELS = "recent_app_sidebar_disable_labels";
+    private static final String APP_SIDEBAR_LABEL_COLOR = "recent_app_sidebar_label_color";
+    private static final String APP_SIDEBAR_BG_COLOR = "recent_app_sidebar_bg_color";
+    private static final String APP_SIDEBAR_SCALE = "recent_app_sidebar_scale";
+
+    private SlimSeekBarPreference mAppSidebarScale;
+    private SwitchPreference mAppSidebarHideLabels;
+    private ColorPickerPreference mAppSidebarLabelColor;
+    private ColorPickerPreference mAppSidebarBgColor;
+
+    private static final int MENU_RESET = Menu.FIRST;
+    private static final int DEFAULT_COLOR = 0x00ffffff;
+
+    @Override
+    protected int getMetricsCategory() {
+        return MetricsLogger.APPLICATION;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        addPreferencesFromResource(R.xml.recent_app_sidebar_settings);
+        initializeAllPreferences();
+    }
+
+    public boolean onPreferenceChange(Preference preference, Object newValue) {
+        if (preference == mAppSidebarScale) {
+            int value = Integer.parseInt((String) newValue);
+            Settings.System.putInt(getContentResolver(),
+                    Settings.System.RECENT_APP_SIDEBAR_SCALE_FACTOR, value);
+            return true;
+        } else if (preference == mAppSidebarHideLabels) {
+            Settings.System.putInt(getContentResolver(), Settings.System.RECENT_APP_SIDEBAR_DISABLE_LABELS,
+                    ((Boolean) newValue) ? 1 : 0);
+            return true;
+        } else if (preference == mAppSidebarLabelColor) {
+            String hex = ColorPickerPreference.convertToARGB(
+                    Integer.valueOf(String.valueOf(newValue)));
+            if (hex.equals("#00ffffff")) {
+                preference.setSummary(R.string.default_string);
+            } else {
+                preference.setSummary(hex);
+            }
+            int intHex = ColorPickerPreference.convertToColorInt(hex);
+            Settings.System.putInt(getContentResolver(),
+                    Settings.System.RECENT_APP_SIDEBAR_TEXT_COLOR,
+                    intHex);
+            return true;
+        } else if (preference == mAppSidebarBgColor) {
+            String hex = ColorPickerPreference.convertToARGB(
+                    Integer.valueOf(String.valueOf(newValue)));
+            if (hex.equals("#00ffffff")) {
+                preference.setSummary(R.string.default_string);
+            } else {
+                preference.setSummary(hex);
+            }
+            int intHex = ColorPickerPreference.convertToColorInt(hex);
+            Settings.System.putInt(getContentResolver(),
+                    Settings.System.RECENT_APP_SIDEBAR_BG_COLOR,
+                    intHex);
+            return true;
+        }
+        return false;
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        menu.add(0, MENU_RESET, 0, R.string.reset)
+                .setIcon(R.drawable.ic_settings_reset)
+                .setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        switch (item.getItemId()) {
+            case MENU_RESET:
+                resetToDefault();
+                return true;
+            default:
+                return super.onContextItemSelected(item);
+        }
+    }
+
+    private void resetToDefault() {
+        AlertDialog.Builder alertDialog = new AlertDialog.Builder(getActivity());
+        alertDialog.setTitle(R.string.shortcut_action_reset);
+        alertDialog.setMessage(R.string.reset_message);
+        alertDialog.setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
+            public void onClick(DialogInterface dialog, int id) {
+                resetValues();
+            }
+        });
+        alertDialog.setNegativeButton(R.string.cancel, null);
+        alertDialog.create().show();
+    }
+
+    private void resetValues() {
+        Settings.System.putInt(getContentResolver(),
+                Settings.System.RECENT_APP_SIDEBAR_TEXT_COLOR, DEFAULT_COLOR);
+        mAppSidebarLabelColor.setNewPreviewColor(DEFAULT_COLOR);
+        mAppSidebarLabelColor.setSummary(R.string.default_string);
+        Settings.System.putInt(getContentResolver(),
+                Settings.System.RECENT_APP_SIDEBAR_BG_COLOR, DEFAULT_COLOR);
+        mAppSidebarBgColor.setNewPreviewColor(DEFAULT_COLOR);
+        mAppSidebarBgColor.setSummary(R.string.default_string);
+    }
+
+    private void initializeAllPreferences() {
+        mAppSidebarScale = (SlimSeekBarPreference) findPreference(APP_SIDEBAR_SCALE);
+        mAppSidebarScale.setInterval(5);
+        mAppSidebarScale.setDefault(100);
+        mAppSidebarScale.minimumValue(60);
+        mAppSidebarScale.setOnPreferenceChangeListener(this);
+        mAppSidebarScale.setInitValue(Settings.System.getInt(getContentResolver(),
+                Settings.System.RECENT_APP_SIDEBAR_SCALE_FACTOR, 100) - 60);
+
+        mAppSidebarHideLabels =  (SwitchPreference) findPreference(APP_SIDEBAR_HIDE_LABELS);
+        mAppSidebarHideLabels.setOnPreferenceChangeListener(this);
+        mAppSidebarHideLabels.setChecked(Settings.System.getInt(getContentResolver(),
+                Settings.System.RECENT_APP_SIDEBAR_DISABLE_LABELS, 0) == 1);
+
+
+        mAppSidebarLabelColor = (ColorPickerPreference) findPreference(APP_SIDEBAR_LABEL_COLOR);
+        mAppSidebarLabelColor.setOnPreferenceChangeListener(this);
+        final int intColorSidebarLabel = Settings.System.getInt(getContentResolver(),
+                Settings.System.RECENT_APP_SIDEBAR_TEXT_COLOR, 0x00ffffff);
+        String hexColorSidebarLabel = String.format("#%08x", (0x00ffffff & intColorSidebarLabel));
+        if (hexColorSidebarLabel.equals("#00ffffff")) {
+            mAppSidebarLabelColor.setSummary(R.string.default_string);
+        } else {
+            mAppSidebarLabelColor.setSummary(hexColorSidebarLabel);
+        }
+        mAppSidebarLabelColor.setNewPreviewColor(intColorSidebarLabel);
+
+        mAppSidebarBgColor =
+                (ColorPickerPreference) findPreference(APP_SIDEBAR_BG_COLOR);
+        mAppSidebarBgColor.setOnPreferenceChangeListener(this);
+        final int intColorSidebarBg = Settings.System.getInt(getContentResolver(),
+                Settings.System.RECENT_APP_SIDEBAR_BG_COLOR, 0x00ffffff);
+        String hexColorSidebarBg = String.format("#%08x", (0x00ffffff & intColorSidebarBg));
+        if (hexColorSidebarBg.equals("#00ffffff")) {
+            mAppSidebarBgColor.setSummary(R.string.default_string);
+        } else {
+            mAppSidebarBgColor.setSummary(hexColorSidebarBg);
+        }
+        mAppSidebarBgColor.setNewPreviewColor(intColorSidebarBg);
+
+        // Enable options menu for color reset
+        setHasOptionsMenu(true);
+    }
+}
diff --git a/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebarFragment.java b/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebarFragment.java
new file mode 100644
index 0000000..e737bd2
--- /dev/null
+++ b/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebarFragment.java
@@ -0,0 +1,56 @@
+/*
+ * Copyright (C) 2013-2015 Slimroms
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.slim.fragments;
+
+import android.os.Bundle;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ListView;
+
+import com.android.internal.logging.MetricsLogger;
+import com.android.settings.R;
+import com.android.settings.SettingsPreferenceFragment;
+
+public class RecentAppSidebarFragment extends SettingsPreferenceFragment {
+
+    @Override
+    protected int getMetricsCategory() {
+        return MetricsLogger.APPLICATION;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        addPreferencesFromResource(R.xml.recent_app_sidebar_fragment);
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater,
+                             ViewGroup container, Bundle savedInstanceState) {
+        final View view = super.onCreateView(inflater, container, savedInstanceState);
+        final ListView list = (ListView) view.findViewById(android.R.id.list);
+        // our container already takes care of the padding
+        if (list != null) {
+            int paddingTop = list.getPaddingTop();
+            int paddingBottom = list.getPaddingBottom();
+            list.setPadding(0, paddingTop, 0, paddingBottom);
+        }
+        return view;
+    }
+}
-- 
1.9.1

