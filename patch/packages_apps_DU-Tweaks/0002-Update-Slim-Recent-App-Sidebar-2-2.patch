From 54c127d7a733d7ac2a56b712685e7699b7ff6247 Mon Sep 17 00:00:00 2001
From: sub77 <sub77@ymail.com>
Date: Mon, 8 Aug 2016 21:59:01 +0200
Subject: [PATCH 2/2] Update Slim Recent App Sidebar (2/2)

- Add setting to disable sidebar without removing items
- Add setting to not open simultaneously with recents in order to reduce recents lag when opening

Change-Id: I9421cc97bfabeeeb3b656fa4281766841213951a
---
 res/values/strings.xml                             |  3 +++
 res/xml/recent_app_sidebar_fragment.xml            |  5 ++++
 res/xml/recent_app_sidebar_settings.xml            |  7 ++++++
 .../dutweaks/fragments/RecentAppSidebar.java       | 18 ++++++++++++--
 .../fragments/RecentAppSidebarFragment.java        | 29 +++++++++++++++++++++-
 5 files changed, 59 insertions(+), 3 deletions(-)

diff --git a/res/values/strings.xml b/res/values/strings.xml
index 501a717..1d7a005 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -1055,5 +1055,8 @@
     <string name="recent_app_sidebar_label_color_title">Label color</string>
     <string name="recent_app_sidebar_bg_color_title">Background color</string>
     <string name="recent_app_sidebar_scale_title">Size</string>
+    <string name="use_recent_app_sidebar">Enable recent app sidebar</string>
+    <string name="recent_app_sidebar_open_simultaneously_title">Open simultaneously with recents</string>
+    <string name="recent_app_sidebar_open_simultaneously_summary">Reduce recents opening lag by disabling this</string>
 
 </resources>
diff --git a/res/xml/recent_app_sidebar_fragment.xml b/res/xml/recent_app_sidebar_fragment.xml
index 162f8d6..6b73dfa 100644
--- a/res/xml/recent_app_sidebar_fragment.xml
+++ b/res/xml/recent_app_sidebar_fragment.xml
@@ -16,6 +16,11 @@
 
 <PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
 
+    <SwitchPreference
+            android:key="use_recent_app_sidebar"
+            android:title="@string/use_recent_app_sidebar"
+            android:defaultValue="true" />
+
     <PreferenceScreen
         android:fragment="com.android.settings.slim.RecentAppSidebar"
         android:key="recent_app_sidebar"
diff --git a/res/xml/recent_app_sidebar_settings.xml b/res/xml/recent_app_sidebar_settings.xml
index 5a8d20b..cf62645 100644
--- a/res/xml/recent_app_sidebar_settings.xml
+++ b/res/xml/recent_app_sidebar_settings.xml
@@ -45,4 +45,11 @@
             alphaSlider="true"
             android:persistent="false" />
 
+    <SwitchPreference
+            android:key="recent_app_sidebar_open_simultaneously"
+            android:title="@string/recent_app_sidebar_open_simultaneously_title"
+            android:summary="@string/recent_app_sidebar_open_simultaneously_summary"
+            android:defaultValue="true"
+            android:persistent="false" />
+
 </PreferenceScreen>
diff --git a/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebar.java b/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebar.java
index 6d45d89..512938e 100644
--- a/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebar.java
+++ b/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebar.java
@@ -42,11 +42,14 @@ public class RecentAppSidebar extends SettingsPreferenceFragment implements Dial
     private static final String APP_SIDEBAR_LABEL_COLOR = "recent_app_sidebar_label_color";
     private static final String APP_SIDEBAR_BG_COLOR = "recent_app_sidebar_bg_color";
     private static final String APP_SIDEBAR_SCALE = "recent_app_sidebar_scale";
+    private static final String APP_SIDEBAR_OPEN_SIMULTANEOUSLY =
+            "recent_app_sidebar_open_simultaneously";
 
     private SlimSeekBarPreference mAppSidebarScale;
     private SwitchPreference mAppSidebarHideLabels;
     private ColorPickerPreference mAppSidebarLabelColor;
     private ColorPickerPreference mAppSidebarBgColor;
+    private SwitchPreference mAppSidebarOpenSimultaneously;
 
     private static final int MENU_RESET = Menu.FIRST;
     private static final int DEFAULT_COLOR = 0x00ffffff;
@@ -70,7 +73,8 @@ public class RecentAppSidebar extends SettingsPreferenceFragment implements Dial
                     Settings.System.RECENT_APP_SIDEBAR_SCALE_FACTOR, value);
             return true;
         } else if (preference == mAppSidebarHideLabels) {
-            Settings.System.putInt(getContentResolver(), Settings.System.RECENT_APP_SIDEBAR_DISABLE_LABELS,
+            Settings.System.putInt(getContentResolver(),
+                    Settings.System.RECENT_APP_SIDEBAR_DISABLE_LABELS,
                     ((Boolean) newValue) ? 1 : 0);
             return true;
         } else if (preference == mAppSidebarLabelColor) {
@@ -99,6 +103,11 @@ public class RecentAppSidebar extends SettingsPreferenceFragment implements Dial
                     Settings.System.RECENT_APP_SIDEBAR_BG_COLOR,
                     intHex);
             return true;
+        } else if (preference == mAppSidebarOpenSimultaneously) {
+            Settings.System.putInt(getContentResolver(),
+                    Settings.System.RECENT_APP_SIDEBAR_OPEN_SIMULTANEOUSLY,
+                    ((Boolean) newValue) ? 1 : 0);
+            return true;
         }
         return false;
     }
@@ -154,11 +163,16 @@ public class RecentAppSidebar extends SettingsPreferenceFragment implements Dial
         mAppSidebarScale.setInitValue(Settings.System.getInt(getContentResolver(),
                 Settings.System.RECENT_APP_SIDEBAR_SCALE_FACTOR, 100) - 60);
 
-        mAppSidebarHideLabels =  (SwitchPreference) findPreference(APP_SIDEBAR_HIDE_LABELS);
+        mAppSidebarHideLabels = (SwitchPreference) findPreference(APP_SIDEBAR_HIDE_LABELS);
         mAppSidebarHideLabels.setOnPreferenceChangeListener(this);
         mAppSidebarHideLabels.setChecked(Settings.System.getInt(getContentResolver(),
                 Settings.System.RECENT_APP_SIDEBAR_DISABLE_LABELS, 0) == 1);
 
+        mAppSidebarOpenSimultaneously =
+                (SwitchPreference) findPreference(APP_SIDEBAR_OPEN_SIMULTANEOUSLY);
+        mAppSidebarOpenSimultaneously.setOnPreferenceChangeListener(this);
+        mAppSidebarOpenSimultaneously.setChecked(Settings.System.getInt(getContentResolver(),
+                Settings.System.RECENT_APP_SIDEBAR_OPEN_SIMULTANEOUSLY, 1) == 1);
 
         mAppSidebarLabelColor = (ColorPickerPreference) findPreference(APP_SIDEBAR_LABEL_COLOR);
         mAppSidebarLabelColor.setOnPreferenceChangeListener(this);
diff --git a/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebarFragment.java b/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebarFragment.java
index e737bd2..22fdfca 100644
--- a/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebarFragment.java
+++ b/src/com/dirtyunicorns/dutweaks/fragments/RecentAppSidebarFragment.java
@@ -17,6 +17,9 @@
 package com.android.settings.slim.fragments;
 
 import android.os.Bundle;
+import android.preference.Preference;
+import android.preference.SwitchPreference;
+import android.provider.Settings;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -26,7 +29,13 @@ import com.android.internal.logging.MetricsLogger;
 import com.android.settings.R;
 import com.android.settings.SettingsPreferenceFragment;
 
-public class RecentAppSidebarFragment extends SettingsPreferenceFragment {
+public class RecentAppSidebarFragment extends SettingsPreferenceFragment implements
+        Preference.OnPreferenceChangeListener {
+
+    // Preferences
+    private static final String USE_RECENT_APP_SIDEBAR = "use_recent_app_sidebar";
+
+    private SwitchPreference mUseSidebar;
 
     @Override
     protected int getMetricsCategory() {
@@ -38,6 +47,7 @@ public class RecentAppSidebarFragment extends SettingsPreferenceFragment {
         super.onCreate(savedInstanceState);
 
         addPreferencesFromResource(R.xml.recent_app_sidebar_fragment);
+        initializeAllPreferences();
     }
 
     @Override
@@ -53,4 +63,21 @@ public class RecentAppSidebarFragment extends SettingsPreferenceFragment {
         }
         return view;
     }
+
+    public boolean onPreferenceChange(Preference preference, Object newValue) {
+        if (preference == mUseSidebar) {
+            Settings.System.putInt(getContentResolver(),
+                    Settings.System.USE_RECENT_APP_SIDEBAR,
+                    ((Boolean) newValue) ? 1 : 0);
+            return true;
+        }
+        return false;
+    }
+
+    private void initializeAllPreferences() {
+        mUseSidebar = (SwitchPreference) findPreference(USE_RECENT_APP_SIDEBAR);
+        mUseSidebar.setOnPreferenceChangeListener(this);
+        mUseSidebar.setChecked(Settings.System.getInt(getContentResolver(),
+                Settings.System.USE_RECENT_APP_SIDEBAR, 1) == 1);
+    }
 }
-- 
1.9.1

