From 1c66f945564d0e61d989eed38d50224460aa320a Mon Sep 17 00:00:00 2001
From: Deepak Kundra <deepakkundra@gmail.com>
Date: Mon, 10 Nov 2014 02:21:55 +0000
Subject: [PATCH] DB: Upgrade the DB to reflect new schema structure for M

Bump the DB version from QC's changes
We still have some upgrade steps to do to upgrade from CM11, but prevent
crashlooping of acore for people running L's original provider

Properly upgrade DB

APNs: Add statement to update carriers table to include read_only column
*  This fixes apns not showing in settings on a dirty flash from 12.0 to 12.1

TelephonyProvider: Handle upgrade from 11 -> 12.1.

Add another db upgrade
CAF added a lot of new columns to the database. We just haven't noticed
because you only notice when you try to restore your apn database and
you get SQL errors and an empty apn table...
PS2: Don't bump rev number

Add the user set network mode to the siminfo table
* To track what the user set for the particular sub independent
  of the currently set network mode (i.e. PREFERRED_NETWORK_MODE)
* Useful on MSIM where the modem may only support 2G on one of the slots,
  so the preferred network mode (and the NETWORK_MODE column) would
  not always reflect the user desired network mode.
Ref: CYNGNOS-291

Change-Id: I8fec4fc21dd2320772d6b33915a85c9977fdadb1
---
 .../providers/telephony/TelephonyProvider.java     | 147 +++++++++++++++++----
 1 file changed, 123 insertions(+), 24 deletions(-)

diff --git a/src/com/android/providers/telephony/TelephonyProvider.java b/src/com/android/providers/telephony/TelephonyProvider.java
index 5c21776..4f5cc7f 100644
--- a/src/com/android/providers/telephony/TelephonyProvider.java
+++ b/src/com/android/providers/telephony/TelephonyProvider.java
@@ -46,6 +46,7 @@ import android.text.TextUtils;
 import android.util.Log;
 import android.util.Xml;
 
+import com.android.internal.telephony.RILConstants;
 import com.android.internal.util.XmlUtils;
 
 import org.xmlpull.v1.XmlPullParser;
@@ -66,7 +67,7 @@ public class TelephonyProvider extends ContentProvider
     private static final boolean DBG = true;
     private static final boolean VDBG = false; // STOPSHIP if true
 
-    private static final int DATABASE_VERSION = 17 << 16;
+    private static final int DATABASE_VERSION = 21 << 16;
     private static final int URL_UNKNOWN = 0;
     private static final int URL_TELEPHONY = 1;
     private static final int URL_CURRENT = 2;
@@ -222,6 +223,7 @@ public class TelephonyProvider extends ContentProvider
                     + SubscriptionManager.MNC + " INTEGER DEFAULT 0,"
                     + SubscriptionManager.SUB_STATE + " INTEGER DEFAULT " + SubscriptionManager.ACTIVE + ","
                     + SubscriptionManager.NETWORK_MODE+ " INTEGER DEFAULT " + SubscriptionManager.DEFAULT_NW_MODE + ","
+                    + SubscriptionManager.USER_NETWORK_MODE + " INTEGER DEFAULT " + RILConstants.PREFERRED_NETWORK_MODE + ","
                     + SubscriptionManager.CB_EXTREME_THREAT_ALERT + " INTEGER DEFAULT 1,"
                     + SubscriptionManager.CB_SEVERE_THREAT_ALERT + " INTEGER DEFAULT 1,"
                     + SubscriptionManager.CB_AMBER_ALERT + " INTEGER DEFAULT 1,"
@@ -474,16 +476,7 @@ public class TelephonyProvider extends ContentProvider
                 oldVersion = 9 << 16 | 6;
             }
             if (oldVersion < (10 << 16 | 6)) {
-                db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
-                        " ADD COLUMN profile_id INTEGER DEFAULT 0;");
-                db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
-                        " ADD COLUMN modem_cognitive BOOLEAN DEFAULT 0;");
-                db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
-                        " ADD COLUMN max_conns INTEGER DEFAULT 0;");
-                db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
-                        " ADD COLUMN wait_time INTEGER DEFAULT 0;");
-                db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
-                        " ADD COLUMN max_conns_time INTEGER DEFAULT 0;");
+                upgradeForProfileIdIfNecessary(db);
                 oldVersion = 10 << 16 | 6;
             }
             if (oldVersion < (11 << 16 | 6)) {
@@ -511,6 +504,12 @@ public class TelephonyProvider extends ContentProvider
                     // Try to update the siminfo table. It might not be there.
                     db.execSQL("ALTER TABLE " + SIMINFO_TABLE + " ADD COLUMN " +
                             SubscriptionManager.CARRIER_NAME + " TEXT DEFAULT '';");
+                    db.execSQL("ALTER TABLE " + SIMINFO_TABLE +
+                            " ADD COLUMN " + "sub_state"
+                            + " INTEGER DEFAULT " + 1 + ";");
+                    db.execSQL("ALTER TABLE " + SIMINFO_TABLE +
+                            " ADD COLUMN " + "network_mode"
+                            + " INTEGER DEFAULT " + -1 + ";");
                 } catch (SQLiteException e) {
                     if (DBG) {
                         log("onUpgrade skipping " + SIMINFO_TABLE + " upgrade. " +
@@ -519,12 +518,94 @@ public class TelephonyProvider extends ContentProvider
                 }
                 oldVersion = 13 << 16 | 6;
             }
-            if (oldVersion < (14 << 16 | 6)) {
-                // Do nothing. This is to avoid recreating table twice. Table is anyway recreated
-                // for next version and that takes care of updates for this version as well.
-                // This version added a new column user_edited to carriers db.
+            //CM Switched from Version13 to Version17/18
+            if (oldVersion < (17 << 16 | 6)) {
+                try {
+                        upgradeForProfileIdIfNecessary(db);
+                    } catch (SQLiteException e) {
+                        if (DBG) {
+                            log("onUpgrade " + CARRIERS_TABLE + ": profile_id already present.");
+                        }
+                    }
+                    
+                    try {
+                        db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
+                                " ADD COLUMN mtu INTEGER DEFAULT 0;");
+                    } catch (SQLiteException e) {
+                        if (DBG) {
+                            log("onUpgrade " + CARRIERS_TABLE + ": mtu already present.");
+                        }
+                    }
+                    
+                    try {
+                    // Add ppp_number field if it's missing
+                    db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
+                            " ADD COLUMN ppp_number TEXT DEFAULT '';");
+                } catch (SQLiteException e) {
+                    if (DBG) {
+                        log("onUpgrade " + CARRIERS_TABLE + ": ppp_number already present.");
+                    }
+                }
+
+                try {
+                    // Add localized_name field if it's missing
+                    db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
+                            " ADD COLUMN localized_name TEXT DEFAULT '';");
+                } catch (SQLiteException e) {
+                    if (DBG) {
+                        log("onUpgrade " + CARRIERS_TABLE + ": localized_name already present.");
+                    }
+                }
+
+                try {
+                    // Add visit_area field if it's missing
+                    db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
+                            " ADD COLUMN visit_area TEXT DEFAULT '';");
+                } catch (SQLiteException e) {
+                    if (DBG) {
+                        log("onUpgrade " + CARRIERS_TABLE + ": visit_area already present.");
+                    }
+                }
+
+                try {
+                    // Try to update the siminfo table. It might not be there.
+                    db.execSQL("ALTER TABLE " + SIMINFO_TABLE +
+                            " ADD COLUMN " + SubscriptionManager.CARRIER_NAME + " TEXT DEFAULT '';");
+                } catch (SQLiteException e) {
+                    if (DBG) {
+                        log("onUpgrade skipping " + SIMINFO_TABLE + " upgrade. " +
+                                " The table will get created in onOpen.");
+                    }
+                }
+
+                try {
+                    // read_only was present in CM11, but not in CM12. Add it if it's missing.
+                    db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
+                            " ADD COLUMN read_only BOOLEAN DEFAULT 0;");
+                } catch (SQLiteException e) {
+                    if (DBG) {
+                        log("onUpgrade " + CARRIERS_TABLE + ": read_only already present.");
+                    }
+                }
+                oldVersion = 17 << 16 | 6;
+            }
+            if (oldVersion < (18 << 16 | 6)) {
+                try {
+                    // Try to update the siminfo table. It might not be there.
+                    db.execSQL("ALTER TABLE " + SIMINFO_TABLE
+                            + " ADD COLUMN " + SubscriptionManager.USER_NETWORK_MODE
+                            + " INTEGER DEFAULT " + RILConstants.PREFERRED_NETWORK_MODE + ";");
+                } catch (SQLiteException e) {
+                    if (DBG) {
+                        log("onUpgrade skipping " + SIMINFO_TABLE + " upgrade. " +
+                                " The table will get created in onOpen.");
+                    }
+                }
+                oldVersion = 18 << 16 | 6;
             }
-            if (oldVersion < (15 << 16 | 6)) {
+            //CM Switched from Version13 to Version17/18, comments below reflect AOSP. In case
+            //of CM we will be upgrading from version 18, but the logic applies.
+            if (oldVersion < (21 << 16 | 6)) {
                 // Most devices should be upgrading from version 13. On upgrade new db will be
                 // populated from the xml included in OTA but user and carrier edited/added entries
                 // need to be preserved. This new version also adds new columns EDITED and
@@ -581,9 +662,6 @@ public class TelephonyProvider extends ContentProvider
                     c.close();
                 }
 
-                oldVersion = 15 << 16 | 6;
-            }
-            if (oldVersion < (16 << 16 | 6)) {
                 try {
                     // Try to update the siminfo table. It might not be there.
                     // These columns may already be present in which case execSQL will throw an
@@ -618,8 +696,9 @@ public class TelephonyProvider extends ContentProvider
                                 " The table will get created in onOpen.");
                     }
                 }
-                oldVersion = 16 << 16 | 6;
+                oldVersion = 21 << 16 | 6;
             }
+
             if (DBG) {
                 log("dbh.onUpgrade:- db=" + db + " oldV=" + oldVersion + " newV=" + newVersion);
             }
@@ -642,10 +721,13 @@ public class TelephonyProvider extends ContentProvider
                 // upgrade are mentioned in onUpgrade(). This file missing means user/carrier added
                 // APNs cannot be preserved. Throw an exception so that OEMs know they need to
                 // include old apns file for comparison.
-                loge("preserveUserAndCarrierApns: FileNotFoundException");
-                throw new RuntimeException("preserveUserAndCarrierApns: " + OLD_APNS_PATH +
-                        " not found. It is needed to upgrade from older versions of APN " +
-                        "db while preserving user/carrier added/edited entries.");
+                loge("preserveUserAndCarrierApns: FileNotFoundException " + OLD_APNS_PATH +
+                        " not found. It is needed to upgrade from older versions of APN" +
+                        " db while preserving user/carrier added/edited entries.");
+                // In CM we have many versions of APN's. If OLD file is not found log error only
+                //throw new RuntimeException("preserveUserAndCarrierApns: " + OLD_APNS_PATH +
+                //        " not found. It is needed to upgrade from older versions of APN " +
+                //        "db while preserving user/carrier added/edited entries.");
             } catch (Exception e) {
                 loge("preserveUserAndCarrierApns: Exception while parsing '" +
                         confFile.getAbsolutePath() + "'" + e);
@@ -820,6 +902,9 @@ public class TelephonyProvider extends ContentProvider
                     getStringValueFromCursor(cv, c, Telephony.Carriers.ROAMING_PROTOCOL);
                     getStringValueFromCursor(cv, c, Telephony.Carriers.MVNO_TYPE);
                     getStringValueFromCursor(cv, c, Telephony.Carriers.MVNO_MATCH_DATA);
+                    getStringValueFromCursor(cv, c, Telephony.Carriers.PPP_NUMBER);
+                    getStringValueFromCursor(cv, c, Telephony.Carriers.LOCALIZED_NAME);
+                    getStringValueFromCursor(cv, c, Telephony.Carriers.VISIT_AREA);
 
                     // bool/int vals
                     getIntValueFromCursor(cv, c, Telephony.Carriers.AUTH_TYPE);
@@ -833,6 +918,7 @@ public class TelephonyProvider extends ContentProvider
                     getIntValueFromCursor(cv, c, Telephony.Carriers.WAIT_TIME);
                     getIntValueFromCursor(cv, c, Telephony.Carriers.MAX_CONNS_TIME);
                     getIntValueFromCursor(cv, c, Telephony.Carriers.MTU);
+                    getIntValueFromCursor(cv, c, Telephony.Carriers.READ_ONLY);
 
                     // Change bearer to a bitmask
                     String bearerStr = c.getString(c.getColumnIndex(Telephony.Carriers.BEARER));
@@ -2037,6 +2123,19 @@ public class TelephonyProvider extends ContentProvider
         return count;
     }
 
+    private static void upgradeForProfileIdIfNecessary(SQLiteDatabase db) {
+        db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
+                " ADD COLUMN profile_id INTEGER DEFAULT 0;");
+        db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
+                " ADD COLUMN modem_cognitive BOOLEAN DEFAULT 0;");
+        db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
+                " ADD COLUMN max_conns INTEGER DEFAULT 0;");
+        db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
+                " ADD COLUMN wait_time INTEGER DEFAULT 0;");
+        db.execSQL("ALTER TABLE " + CARRIERS_TABLE +
+                " ADD COLUMN max_conns_time INTEGER DEFAULT 0;");
+    }
+
     private void checkPermission() {
         int status = getContext().checkCallingOrSelfPermission(
                 "android.permission.WRITE_APN_SETTINGS");
-- 
1.9.1

